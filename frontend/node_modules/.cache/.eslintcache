[{"/Users/brendan/Desktop/screening-app/frontend/src/index.tsx":"1","/Users/brendan/Desktop/screening-app/frontend/src/state/store.ts":"2","/Users/brendan/Desktop/screening-app/frontend/src/components/App.tsx":"3","/Users/brendan/Desktop/screening-app/frontend/src/state/reducers/index.ts":"4","/Users/brendan/Desktop/screening-app/frontend/src/state/reducers/userReducers.ts":"5","/Users/brendan/Desktop/screening-app/frontend/src/state/action-types/index.ts":"6","/Users/brendan/Desktop/screening-app/frontend/src/screens/LoginScreen.tsx":"7","/Users/brendan/Desktop/screening-app/frontend/src/components/FormContainer.tsx":"8","/Users/brendan/Desktop/screening-app/frontend/src/hooks/useTypedSelector.ts":"9","/Users/brendan/Desktop/screening-app/frontend/src/hooks/useActions.ts":"10","/Users/brendan/Desktop/screening-app/frontend/src/state/index.ts":"11","/Users/brendan/Desktop/screening-app/frontend/src/state/action-creators/userActions.ts":"12","/Users/brendan/Desktop/screening-app/frontend/src/screens/FormScreen.tsx":"13","/Users/brendan/Desktop/screening-app/frontend/src/components/Message.tsx":"14","/Users/brendan/Desktop/screening-app/frontend/src/components/Loader.tsx":"15","/Users/brendan/Desktop/screening-app/frontend/src/components/NavBar.tsx":"16","/Users/brendan/Desktop/screening-app/frontend/src/screens/RegisterScreen.tsx":"17","/Users/brendan/Desktop/screening-app/frontend/src/components/Question.tsx":"18","/Users/brendan/Desktop/screening-app/frontend/src/screens/ProfileScreen.tsx":"19","/Users/brendan/Desktop/screening-app/frontend/src/state/reducers/questionReducers.ts":"20","/Users/brendan/Desktop/screening-app/frontend/src/state/action-creators/questionActions.ts":"21","/Users/brendan/Desktop/screening-app/frontend/src/state/reducers/submissionReducers.ts":"22","/Users/brendan/Desktop/screening-app/frontend/src/state/action-creators/submissionActions.ts":"23","/Users/brendan/Desktop/screening-app/frontend/src/screens/CompletedScreen.tsx":"24"},{"size":446,"mtime":1624159800000,"results":"25","hashOfConfig":"26"},{"size":672,"mtime":1624109123000,"results":"27","hashOfConfig":"26"},{"size":1857,"mtime":1624719369000,"results":"28","hashOfConfig":"26"},{"size":875,"mtime":1624664328000,"results":"29","hashOfConfig":"26"},{"size":2760,"mtime":1624231559000,"results":"30","hashOfConfig":"26"},{"size":1478,"mtime":1624663046000,"results":"31","hashOfConfig":"26"},{"size":2497,"mtime":1624718174000,"results":"32","hashOfConfig":"26"},{"size":472,"mtime":1624110383000,"results":"33","hashOfConfig":"26"},{"size":205,"mtime":1624111103000,"results":"34","hashOfConfig":"26"},{"size":550,"mtime":1624330258000,"results":"35","hashOfConfig":"26"},{"size":275,"mtime":1624328438000,"results":"36","hashOfConfig":"26"},{"size":4889,"mtime":1624407134000,"results":"37","hashOfConfig":"26"},{"size":5270,"mtime":1624717621000,"results":"38","hashOfConfig":"26"},{"size":268,"mtime":1624110006000,"results":"39","hashOfConfig":"26"},{"size":320,"mtime":1624145804000,"results":"40","hashOfConfig":"26"},{"size":1737,"mtime":1624407908000,"results":"41","hashOfConfig":"26"},{"size":4237,"mtime":1624326316000,"results":"42","hashOfConfig":"26"},{"size":1893,"mtime":1624323194000,"results":"43","hashOfConfig":"26"},{"size":4917,"mtime":1624406822000,"results":"44","hashOfConfig":"26"},{"size":721,"mtime":1624238682000,"results":"45","hashOfConfig":"26"},{"size":1182,"mtime":1624239402000,"results":"46","hashOfConfig":"26"},{"size":2602,"mtime":1624664094000,"results":"47","hashOfConfig":"26"},{"size":5256,"mtime":1624715441000,"results":"48","hashOfConfig":"26"},{"size":2750,"mtime":1624716039000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18yeiik",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},"/Users/brendan/Desktop/screening-app/frontend/src/index.tsx",[],["101","102"],"/Users/brendan/Desktop/screening-app/frontend/src/state/store.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/components/App.tsx",[],"/Users/brendan/Desktop/screening-app/frontend/src/state/reducers/index.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/state/reducers/userReducers.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/state/action-types/index.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/screens/LoginScreen.tsx",[],"/Users/brendan/Desktop/screening-app/frontend/src/components/FormContainer.tsx",[],"/Users/brendan/Desktop/screening-app/frontend/src/hooks/useTypedSelector.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/hooks/useActions.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/state/index.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/state/action-creators/userActions.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/screens/FormScreen.tsx",["103","104"],"import { useEffect, useState } from 'react'\nimport Question from '../components/Question'\nimport { useActions } from '../hooks/useActions'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Modal from 'react-bootstrap/Modal'\n// import Message from '../components/Message'\n// import Loader from '../components/Loader'\nimport { useTypedSelector } from '../hooks/useTypedSelector'\nimport { animateScroll } from 'react-scroll'\n\nconst FormScreen = (): JSX.Element => {\n  const [show, setShow] = useState(false)\n  const toggleShow = () => setShow((show) => !show)\n\n  const [showFail, setShowFail] = useState(false)\n  const toggleShowFail = () => setShowFail((showFail) => !showFail)\n\n  const [allQuestionsAnswered, setAllQuestionsAnswered] = useState(false)\n  const [numQuestionsAnswered, setNumQuestionsAnswered] = useState(0)\n\n  const { userInfo } = useTypedSelector((state) => state.authenticate)\n  const { submission, userResetFlag } = useTypedSelector(\n    (state) => state.submissionFetch\n  )\n  const { loading, error, questions } = useTypedSelector(\n    (state) => state.questionsFetch\n  )\n\n  const submitAnswers = questions?.map((question) => {\n    return { question: question._id, answer: 'no' }\n  })\n\n  const { getQuestions, fetchSubmission, createSubmission } = useActions()\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      !submission && setShow(true)\n    }, 700)\n    return () => clearTimeout(timer)\n  }, [submission])\n\n  useEffect(() => {\n    if (!questions) getQuestions()\n  }, [questions, getQuestions])\n\n  useEffect(() => {\n    if (!userResetFlag) fetchSubmission()\n  }, [userResetFlag, fetchSubmission])\n\n  useEffect(() => {\n    if (numQuestionsAnswered === questions?.length) {\n      setAllQuestionsAnswered(true)\n    } else {\n      setAllQuestionsAnswered(false)\n    }\n  }, [numQuestionsAnswered, questions])\n\n  useEffect(() => {\n    if (allQuestionsAnswered) animateScroll.scrollToBottom({ smooth: true })\n  }, [allQuestionsAnswered])\n\n  const markQuestionAnswered = (operation: 'add' | 'subtract') => {\n    setNumQuestionsAnswered((prevCount) =>\n      operation === 'add' ? prevCount + 1 : prevCount - 1\n    )\n  }\n\n  return (\n    <>\n      <Container className='pb-3 text-center' style={{ maxWidth: '600px' }}>\n        <h2 className='mb-3'>Screening Questions</h2>\n        {questions?.map((question, index) => {\n          return (\n            <Question\n              key={index}\n              questionText={question.question}\n              index={index}\n              markQuestionAnswered={markQuestionAnswered}\n              toggleShowFail={toggleShowFail}\n            />\n          )\n        })}\n        {allQuestionsAnswered && (\n          <Button\n            size='lg'\n            className='mt-3'\n            style={{ width: '100%', fontSize: '3rem' }}\n            type='submit'\n            variant='primary'\n            onClick={() => createSubmission(submitAnswers, false)}\n          >\n            Submit\n          </Button>\n        )}\n      </Container>\n      <Modal show={show} onHide={toggleShow} className='text-center'>\n        <Modal.Body style={{ backgroundColor: '#F0F0F0' }}>\n          <Modal.Title>\n            <p className='text-success'>{'Pre-Screening Messages'}</p>\n            <small className='text-muted'>{`${userInfo?.firstName} ${userInfo?.lastName}`}</small>\n          </Modal.Title>\n        </Modal.Body>\n        <Modal.Body>\n          <h6>\n            Screening for staff for symptoms of COVID is important in order to\n            keep our patients and staff safe.\n          </h6>\n          <h6>\n            In order to maximize the efficacy of screening we would ask that you\n            be honest about your symptoms and complete the screening questions\n            within 2 hours of your shift start time.\n          </h6>\n          <h6>\n            If you recently failed screening and have been authorized to return\n            to work by OHS then you are OK to proceed as long as you have no new\n            symptoms.\n          </h6>\n        </Modal.Body>\n        <Modal.Footer style={{ backgroundColor: '#F5F5F5' }}>\n          <Button\n            style={{ width: '100%' }}\n            variant='success'\n            onClick={toggleShow}\n          >\n            Okay\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showFail} onHide={toggleShowFail} className='text-center'>\n        <Modal.Body style={{ backgroundColor: '#F0F0F0' }}>\n          <Modal.Title>\n            <p className='text-danger'>Contact Us</p>\n            <small className='text-muted'>{`${userInfo?.firstName} ${userInfo?.lastName}`}</small>\n          </Modal.Title>\n        </Modal.Body>\n        <Modal.Body>\n          <h6 className='text-danger'>\n            If you are experiencing any of the symptoms listed below, please see\n            a member of the screening staff, or contact Occupational Health.\n          </h6>\n        </Modal.Body>\n        <Modal.Footer style={{ backgroundColor: '#F5F5F5' }}>\n          <Button\n            style={{ width: '100%' }}\n            variant='success'\n            onClick={toggleShowFail}\n          >\n            Okay\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default FormScreen\n","/Users/brendan/Desktop/screening-app/frontend/src/components/Message.tsx",[],"/Users/brendan/Desktop/screening-app/frontend/src/components/Loader.tsx",[],"/Users/brendan/Desktop/screening-app/frontend/src/components/NavBar.tsx",[],"/Users/brendan/Desktop/screening-app/frontend/src/screens/RegisterScreen.tsx",[],"/Users/brendan/Desktop/screening-app/frontend/src/components/Question.tsx",[],"/Users/brendan/Desktop/screening-app/frontend/src/screens/ProfileScreen.tsx",[],"/Users/brendan/Desktop/screening-app/frontend/src/state/reducers/questionReducers.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/state/action-creators/questionActions.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/state/reducers/submissionReducers.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/state/action-creators/submissionActions.ts",[],"/Users/brendan/Desktop/screening-app/frontend/src/screens/CompletedScreen.tsx",["105","106","107","108"],"import { useEffect } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { useTypedSelector } from '../hooks/useTypedSelector'\nimport Button from 'react-bootstrap/Button'\nimport { useActions } from '../hooks/useActions'\n\nconst CompletedScreen = (): JSX.Element => {\n  const { loading, error, userInfo } = useTypedSelector(\n    (state) => state.authenticate\n  )\n\n  const { loading: loadingEmailFetch, error: errorEmailFetch } =\n    useTypedSelector((state) => state.emailFetch)\n\n  const { loading: loadingEmailCreate, error: errorEmailCreate } =\n    useTypedSelector((state) => state.emailCreate)\n\n  const { clearSubmission, createEmail, fetchEmail } = useActions()\n\n  useEffect(() => {\n    fetchEmail()\n  }, [fetchEmail])\n\n  let color: string = '#2E5090'\n  let fontColor: string = 'black'\n\n  switch (new Date().getDay()) {\n    case 0:\n      color = '#2E5090'\n      break\n    case 1:\n      color = '#41924B'\n      break\n    case 2:\n      color = '#FEF250'\n      break\n    case 3:\n      color = '#FFD1DC'\n      break\n    case 4:\n      color = '#2E5090'\n      break\n    case 5:\n      color = '#FFB347'\n      break\n    case 6:\n      color = '#2E5090'\n      fontColor = 'white'\n  }\n\n  return (\n    <Container\n      fluid\n      className='text-center'\n      style={{ backgroundColor: color, height: '87vh' }}\n    >\n      <Row className='my-3 py-5'>\n        <Col xs={12}>\n          <Button\n            disabled={\n              loadingEmailFetch === false || loadingEmailCreate === false\n                ? true\n                : false\n            }\n            variant='secondary'\n            onClick={() => {\n              if (userInfo) createEmail(userInfo.email, color, fontColor)\n            }}\n          >\n            Send Results By Email\n          </Button>\n        </Col>\n        <Col xs={12} className='mt-1'>\n          <small style={{ color: fontColor }}>{userInfo?.email}</small>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <p style={{ fontWeight: 'bold', color: fontColor }}>{`Completed by ${\n            userInfo?.firstName\n          } ${\n            userInfo?.lastName\n          } on ${new Date().toLocaleDateString()}, ${new Date().toLocaleTimeString()}`}</p>\n          <br />\n          <p style={{ color: fontColor }}>\n            You are cleared to work. Please be prepared to show this\n            confirmation at staff entrance point when reporting for your shift.\n          </p>\n        </Col>\n        <Col xs={12} className='mt-5'>\n          <Button onClick={clearSubmission} variant='secondary'>\n            Start Over\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default CompletedScreen\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":26,"column":11,"nodeType":"115","messageId":"116","endLine":26,"endColumn":18},{"ruleId":"113","severity":1,"message":"117","line":26,"column":20,"nodeType":"115","messageId":"116","endLine":26,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":10,"column":11,"nodeType":"115","messageId":"116","endLine":10,"endColumn":18},{"ruleId":"113","severity":1,"message":"117","line":10,"column":20,"nodeType":"115","messageId":"116","endLine":10,"endColumn":25},{"ruleId":"113","severity":1,"message":"118","line":14,"column":46,"nodeType":"115","messageId":"116","endLine":14,"endColumn":61},{"ruleId":"113","severity":1,"message":"119","line":17,"column":47,"nodeType":"115","messageId":"116","endLine":17,"endColumn":63},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'errorEmailFetch' is assigned a value but never used.","'errorEmailCreate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]